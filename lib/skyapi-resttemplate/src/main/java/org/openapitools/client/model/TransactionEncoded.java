/*
 * Skycoin REST API.
 * Skycoin is a next-generation cryptocurrency.
 *
 * The version of the OpenAPI document: 0.27.0
 * Contact: contact@skycoin.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.client.model.ApiV1PendingTxsTransaction;

/**
 * TransactionEncoded
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-08-06T00:13:07.983-04:00[America/Havana]")
public class TransactionEncoded {
  @JsonProperty("transaction")
  private ApiV1PendingTxsTransaction transaction = null;

  @JsonProperty("received")
  private String received;

  @JsonProperty("checked")
  private String checked;

  @JsonProperty("announced")
  private String announced;

  @JsonProperty("is_valid")
  private Boolean isValid;

  public TransactionEncoded transaction(ApiV1PendingTxsTransaction transaction) {
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @ApiModelProperty(value = "")
  public ApiV1PendingTxsTransaction getTransaction() {
    return transaction;
  }

  public void setTransaction(ApiV1PendingTxsTransaction transaction) {
    this.transaction = transaction;
  }

  public TransactionEncoded received(String received) {
    this.received = received;
    return this;
  }

   /**
   * Get received
   * @return received
  **/
  @ApiModelProperty(value = "")
  public String getReceived() {
    return received;
  }

  public void setReceived(String received) {
    this.received = received;
  }

  public TransactionEncoded checked(String checked) {
    this.checked = checked;
    return this;
  }

   /**
   * Get checked
   * @return checked
  **/
  @ApiModelProperty(value = "")
  public String getChecked() {
    return checked;
  }

  public void setChecked(String checked) {
    this.checked = checked;
  }

  public TransactionEncoded announced(String announced) {
    this.announced = announced;
    return this;
  }

   /**
   * Get announced
   * @return announced
  **/
  @ApiModelProperty(value = "")
  public String getAnnounced() {
    return announced;
  }

  public void setAnnounced(String announced) {
    this.announced = announced;
  }

  public TransactionEncoded isValid(Boolean isValid) {
    this.isValid = isValid;
    return this;
  }

   /**
   * Get isValid
   * @return isValid
  **/
  @ApiModelProperty(value = "")
  public Boolean getIsValid() {
    return isValid;
  }

  public void setIsValid(Boolean isValid) {
    this.isValid = isValid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionEncoded transactionEncoded = (TransactionEncoded) o;
    return Objects.equals(this.transaction, transactionEncoded.transaction) &&
        Objects.equals(this.received, transactionEncoded.received) &&
        Objects.equals(this.checked, transactionEncoded.checked) &&
        Objects.equals(this.announced, transactionEncoded.announced) &&
        Objects.equals(this.isValid, transactionEncoded.isValid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transaction, received, checked, announced, isValid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionEncoded {\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    received: ").append(toIndentedString(received)).append("\n");
    sb.append("    checked: ").append(toIndentedString(checked)).append("\n");
    sb.append("    announced: ").append(toIndentedString(announced)).append("\n");
    sb.append("    isValid: ").append(toIndentedString(isValid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

