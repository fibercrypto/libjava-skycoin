/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class cipher_SHA256s {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected cipher_SHA256s(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(cipher_SHA256s obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        skycoinJNI.delete_cipher_SHA256s(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public cipher_SHA256 getAt(int i) {
    long cPtr = skycoinJNI.cipher_SHA256s_getAt(swigCPtr, this, i);
    return (cPtr == 0) ? null : new cipher_SHA256(cPtr, false);
  }

  public int setAt(int i, cipher_SHA256 hash) {
    return skycoinJNI.cipher_SHA256s_setAt(swigCPtr, this, i, cipher_SHA256.getCPtr(hash), hash);
  }

  public int isEqual(cipher_SHA256s a) {
    return skycoinJNI.cipher_SHA256s_isEqual(swigCPtr, this, cipher_SHA256s.getCPtr(a), a);
  }

  public void allocate(int n) {
    skycoinJNI.cipher_SHA256s_allocate(swigCPtr, this, n);
  }

  public void release() {
    skycoinJNI.cipher_SHA256s_release(swigCPtr, this);
  }

  public void setData(cipher_SHA256 value) {
    skycoinJNI.set_cipher_SHA256s_data(swigCPtr, this, cipher_SHA256.getCPtr(value), value);
  }

  public cipher_SHA256 getData() {
    long cPtr = skycoinJNI.get_cipher_SHA256s_data(swigCPtr, this);
    return (cPtr == 0) ? null : new cipher_SHA256(cPtr, false);
  }

  public void setCount(int value) {
    skycoinJNI.set_cipher_SHA256s_count(swigCPtr, this, value);
  }

  public int getCount() {
    return skycoinJNI.get_cipher_SHA256s_count(swigCPtr, this);
  }

  public cipher_SHA256s() {
    this(skycoinJNI.new_cipher_SHA256s(), true);
  }

}
